{
  "uid" : "e67c6bbf0d251166",
  "name" : "C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases.C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases\\user_profile.test_user_profile.TestUserProfile.test_add_new_delete_address_1___Hello_Kitty____01678997830____41_Nguyen_Thi_Kitty___Sai_Gon___Viet_Nam____Sai_Gon____990000__",
  "fullName" : "Automation.C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases.C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases\\user_profile.test_user_profile.TestUserProfile.test_add_new_delete_address_1___Hello_Kitty____01678997830____41_Nguyen_Thi_Kitty___Sai_Gon___Viet_Nam____Sai_Gon____990000__",
  "historyId" : "d7cff578fc88fe16e924e5ab0669bfb2",
  "time" : {
    "start" : 1565681298960,
    "stop" : 1565681331057,
    "duration" : 32097
  },
  "description" : "Built-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.",
  "descriptionHtml" : "<p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.</p>\n",
  "status" : "failed",
  "statusMessage" : "NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test='menu-bar-user']\"}\n  (Session info: chrome=76.0.3809.100)\n  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)\n",
  "statusTrace" : "self = <Automation.testcases.user_profile.test_user_profile.TestUserProfile testMethod=test_add_new_delete_address_1___Hello_Kitty____01678997830____41_Nguyen_Thi_Kitty___Sai_Gon___Viet_Nam____Sai_Gon____990000__>\nname = 'Hello Kitty', phone_number = '01678997830'\naddress = '41 Nguyen Thi Kitty - Sai Gon - Viet Nam', city = 'Sai Gon'\npost_code = '990000'\n\n    @pytest.mark.run(order=1)\n    @data(*get_csv_data(\"..//Automation//resources//data_test//add_address_book.csv\"))\n    @unpack\n    def test_add_new_delete_address(self, name, phone_number, address, city, post_code):\n        \"\"\"\n            Test add new address in address book\n            \"\"\"\n        STEP(\"1. Login to freightknot.\")\n        self.sign_in.log_in(self.test_data[\"BUSINESS_ACCOUNT\"],\n                            self.test_data[\"PASSWORD\"])\n    \n        STEP(\"2. Go to address book page.\")\n>       self.user_profile.go_to_address_book_from_menu_user()\n\ntestcases\\user_profile\\test_user_profile.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\user_profile\\base_user_profile.py:83: in go_to_address_book_from_menu_user\n    self.move_mouse(self.menu_user)\npages\\base_page.py:312: in move_mouse\n    element = self.get_element_from_css(locator)\npages\\base_page.py:97: in get_element_from_css\n    return self.driver.find_element_by_css_selector(css)\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:598: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000000002DB62E8>\nresponse = {'sessionId': '7ff087347cd610722b38ed75b0b7de99', 'status': 7, 'value': {'message': 'no such element: Unable to locate...r info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test='menu-bar-user']\"}\nE         (Session info: chrome=76.0.3809.100)\nE         (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)\n\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test='menu-bar-user']\"}\n  (Session info: chrome=76.0.3809.100)\n  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)\n",
    "statusTrace" : "self = <Automation.testcases.user_profile.test_user_profile.TestUserProfile testMethod=test_add_new_delete_address_1___Hello_Kitty____01678997830____41_Nguyen_Thi_Kitty___Sai_Gon___Viet_Nam____Sai_Gon____990000__>\nname = 'Hello Kitty', phone_number = '01678997830'\naddress = '41 Nguyen Thi Kitty - Sai Gon - Viet Nam', city = 'Sai Gon'\npost_code = '990000'\n\n    @pytest.mark.run(order=1)\n    @data(*get_csv_data(\"..//Automation//resources//data_test//add_address_book.csv\"))\n    @unpack\n    def test_add_new_delete_address(self, name, phone_number, address, city, post_code):\n        \"\"\"\n            Test add new address in address book\n            \"\"\"\n        STEP(\"1. Login to freightknot.\")\n        self.sign_in.log_in(self.test_data[\"BUSINESS_ACCOUNT\"],\n                            self.test_data[\"PASSWORD\"])\n    \n        STEP(\"2. Go to address book page.\")\n>       self.user_profile.go_to_address_book_from_menu_user()\n\ntestcases\\user_profile\\test_user_profile.py:223: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\user_profile\\base_user_profile.py:83: in go_to_address_book_from_menu_user\n    self.move_mouse(self.menu_user)\npages\\base_page.py:312: in move_mouse\n    element = self.get_element_from_css(locator)\npages\\base_page.py:97: in get_element_from_css\n    return self.driver.find_element_by_css_selector(css)\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:598: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000000002DB62E8>\nresponse = {'sessionId': '7ff087347cd610722b38ed75b0b7de99', 'status': 7, 'value': {'message': 'no such element: Unable to locate...r info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[data-test='menu-bar-user']\"}\nE         (Session info: chrome=76.0.3809.100)\nE         (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)\n\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5bfac4c7329eba8d",
      "name" : "Captured logbook setup",
      "source" : "5bfac4c7329eba8d.txt",
      "type" : "text/plain",
      "size" : 4735
    }, {
      "uid" : "e096ac48c59dee5",
      "name" : "Captured logbook call",
      "source" : "e096ac48c59dee5.txt",
      "type" : "text/plain",
      "size" : 8328
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "automation-PC"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "5016-MainThread"
  }, {
    "name" : "suite",
    "value" : "Automation"
  }, {
    "name" : "testClass",
    "value" : "Automation"
  }, {
    "name" : "testMethod",
    "value" : "C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases.C:\\Jenkins-agent\\workspace\\freightknot-automation\\Automation\\testcases\\user_profile.test_user_profile.TestUserProfile.test_add_new_delete_address_1___Hello_Kitty____01678997830____41_Nguyen_Thi_Kitty___Sai_Gon___Viet_Nam____Sai_Gon____990000__"
  }, {
    "name" : "package",
    "value" : "Automation"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e67c6bbf0d251166.json",
  "parameterValues" : [ ]
}