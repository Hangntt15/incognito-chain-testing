package jenkinsfiles

pipeline {
  agent { label 'Node_134' }
  parameters {
    string(
      name: 'INCOGNITO_CHAIN_BRANCH',
      description: 'Incognito chain build branch',
      defaultValue: 'origin/release'
    )
    string(
      name: 'INCOGNITO_HIGHWAY_BRANCH',
      description: 'Incognito highway build branch',
      defaultValue: 'testnet_bcfn_libp2p_multi_20201207_01'
    )
    string(
      name: 'INCOGNITO_TEST_FRAMEWORK_BRANCH',
      description: 'Incognito test framework branch',
      defaultValue: 'jenkins-qc-automation'
    )
    extendedChoice(
      defaultValue: 'start',
      description: '',
      descriptionPropertyValue: 'Do Do nothing,Start the chain,Stop previous running chain. All other params are ignored,Restart the chain',
      multiSelectDelimiter: ',',
      name: 'BUILD_ACTION',
      quoteValue: false,
      saveJSONParameterToFile: false,
      type: 'PT_RADIO',
      value: 'none,start,stop,restart',
      visibleItemCount: 4
    )
    extendedChoice(
      defaultValue: 'rebuild',
      description: '',
      descriptionPropertyValue: 'Do nothing more,Clear all logs,Clear all chain\'s data,Rebuild chain',
      multiSelectDelimiter: ',',
      name: 'ADDITIONAL_ACTIONS',
      quoteValue: false,
      saveJSONParameterToFile: false,
      type: 'PT_CHECKBOX',
      value: 'none,clearLogs,clearData,rebuild',
      visibleItemCount: 4
    )
    string(
      name: 'INCOGNITO_TESTING_TEST_BED',
      description: 'Incognito testing test bed',
      defaultValue: 'DevJenkinsQCAutomation'
    )
    string(
      name: 'INCOGNITO_TESTING_TEST_DATA',
      description: 'Incognito testing test data',
      defaultValue: 'account_qc_automation'
    )
    string(
      name: 'INCOGNITO_TESTING_TEST_DATA_2',
      description: 'Incognito testing test data2',
      defaultValue: 'account_qc_automation_2'
    )
  }

  stages {
    stage('Preparing') {
      steps {
        echo "Building chain on branch ${INCOGNITO_CHAIN_BRANCH} and highway on branch ${INCOGNITO_HIGHWAY_BRANCH}"
        slackSend(channel: "#incognito-jenkins-dev", attachments: [
          [
            "blocks": [
              [
                "type": "section",
                "text": [
                  text: "Start building for <${BUILD_URL}|*${JOB_NAME} ${BUILD_DISPLAY_NAME}*>\nTriggered by <mailto:${env.BUILD_USER_EMAIL}|${env.BUILD_USER}>",
                  type: 'mrkdwn',
                ]
              ]
            ],
            color   : '#0d47a1'
          ]
        ])
      }
    }

    stage('Build highway') {
      steps {
        echo "Building highway on branch ${INCOGNITO_HIGHWAY_BRANCH}"

        build job: 'VPS134/VPS134_build_highway_pipeline', parameters: [
          [
            $class: 'StringParameterValue',
            name  : 'branch',
            value : "${INCOGNITO_HIGHWAY_BRANCH}"
          ],
          [
            $class: 'StringParameterValue',
            name  : 'Action',
            value : "${BUILD_ACTION}"
          ],
          [
            $class: 'StringParameterValue',
            name  : 'Additional',
            value : "${ADDITIONAL_ACTIONS}"
          ]
        ]
      }
    }

    stage('Build chain') {
      steps {
        build job: 'VPS134/VPS134_build_chain_pipeline', parameters: [
          [
            $class: 'StringParameterValue',
            name  : 'branch',
            value : "${INCOGNITO_CHAIN_BRANCH}"
          ],
          [
            $class: 'StringParameterValue',
            name  : 'Action',
            value : "${BUILD_ACTION}"
          ],
          [
            $class: 'StringParameterValue',
            name  : 'Additional',
            value : "${ADDITIONAL_ACTIONS}"
          ]
        ]
      }
    }

    stage("Waiting for chain to be up") {
      steps {
        echo "Waiting 30 seconds for chain to be ready"
        sleep 30 // seconds
      }
    }

    stage('Checking blockchain network') {
      steps {
        dir('jenkinsfiles/QC_Automation_Test/test-scripts/') {
          sh 'npm install'
          sh "node 01-get-blockchain-info.js"
          sh "node 02-create-and-send-transactions.js"
        }

      }
    }

    stage('Trigger Test Runner') {
      steps {
        build(
          job: 'VPS134/QC-Automation-Test-Runner',
          parameters: [
            [
              $class: 'StringParameterValue',
              name  : 'INCOGNITO_TEST_FRAMEWORK_BRANCH',
              value : "${INCOGNITO_TEST_FRAMEWORK_BRANCH}"
            ],
            [
              $class: 'StringParameterValue',
              name  : 'INCOGNITO_TESTING_TEST_BED',
              value : "${INCOGNITO_TESTING_TEST_BED}"
            ],
            [
              $class: 'StringParameterValue',
              name  : 'INCOGNITO_TESTING_TEST_DATA',
              value : "${INCOGNITO_TESTING_TEST_DATA}"
            ],
            [
              $class: 'StringParameterValue',
              name  : 'INCOGNITO_TESTING_TEST_DATA_2',
              value : "${INCOGNITO_TESTING_TEST_DATA_2}"
            ],
          ],
          wait: false
        )
      }
    }
  }


  post {
    success {
      slackSend(channel: "#incognito-jenkins-dev", attachments: [
        [
          text : "Build <${BUILD_URL}|*${JOB_NAME} ${BUILD_DISPLAY_NAME}*> is successful\nTriggered by <${env.BUILD_USER_EMAIL}|${env.BUILD_USER}>",
          color: '#4caf50',
          type : 'mrkdwn',
        ]
      ])
    }
    failure {
      slackSend(channel: "#incognito-jenkins-dev", attachments: [
        [
          text : "Build <${BUILD_URL}|*${JOB_NAME} ${BUILD_DISPLAY_NAME}*> failed!",
          color: '#c62828'
        ],
        [
          "type": "divider"
        ]
      ])
    }
  }

}
