{
	"info": {
		"_postman_id": "101aa194-c397-4d18-8eb4-8b4b5709d9f7",
		"name": "ShipmentFlowByRegisterUnknown",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SimulateDM",
			"item": [
				{
					"name": "DM-RequestGetSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Insert requirement request with requirement_code: 1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/dimension-machine/missing-settings",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"dimension-machine",
								"missing-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "DM-InternalGetRequestUpdateSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/dimension-machine/requirements",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"dimension-machine",
								"requirements"
							]
						}
					},
					"response": []
				},
				{
					"name": "DM-GetRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							},
							{
								"key": "Authorization",
								"value": "uztUifKfNwQIWOKGPDSH6NggmPE284Og",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/dimension-machine/requirements",
							"host": [
								"{{url}}"
							],
							"path": [
								"dimension-machine",
								"requirements"
							]
						}
					},
					"response": []
				},
				{
					"name": "DM-DisplayRequestUpdateSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"requirement_id\", jsonData.slice(-1)[0].requirement_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/demo/dimension-machine/requirements",
							"host": [
								"{{url}}"
							],
							"path": [
								"demo",
								"dimension-machine",
								"requirements"
							]
						}
					},
					"response": []
				},
				{
					"name": "DM-SendSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							},
							{
								"key": "Authorization",
								"value": "uztUifKfNwQIWOKGPDSH6NggmPE284Og",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requirement_id\": {{requirement_id}},\n  \"host\": \"local-vanvothanh.com\",\n  \"rescan_period\": \"5\",\n  \"get_requirement_period\": \"5\",\n  \"max_dimension_resend_count\": \"5\",\n  \"max_photo_resend_count\": \"5\",\n  \"photo_sending_limit\": \"5\",\n  \"secret_key\": \"uztUifKfNwQIWOKGPDSH6NggmPE284Og\",\n  \"send_time\": \"2019-07-30 03:20:13\"\n}"
						},
						"url": {
							"raw": "{{url}}/dimension-machine/settings",
							"host": [
								"{{url}}"
							],
							"path": [
								"dimension-machine",
								"settings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GetToken",
			"item": [
				{
					"name": "GetToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2861c1d7-956b-4b6b-96c3-0fdf98d9e34f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Return code 1\", function() {",
									"    pm.expect(jsonData.code).to.eql(1);",
									"});",
									"",
									"pm.environment.set(\"token\", JSON.parse(responseBody).login_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication",
								"type": "text",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InRlc3RfYnVzaW5lc3Nfc3dAbWFpbGluYXRvci5jb20iLCJ0aW1lIjoiRnJpIEp1bCAxMiAwNzo0Nzo1MiAyMDE5Iiwicm9sZV9pZCI6MSwiZGF0YSI6IiJ9.1z5A7CVcp7Y71Rul34tOr-fHTx-_g3i3TXOhVVQvaDQ"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test_business_sw@mailinator.com\",\n  \"password\": \"123123\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{login}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{login}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetInternalToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Return code 1\", function() {",
									"    pm.expect(jsonData.code).to.eql(1);",
									"});",
									"",
									"pm.environment.set(\"token_internal\", JSON.parse(responseBody).login_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"internal@swlog.com.sg\",\n\t\"password\":\"123456\"\n\t\n}"
						},
						"url": {
							"raw": "{{url}}/{{login_internal}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{login_internal}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckAddressList",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c68705f2-a2c7-44db-b9ef-84c5469da2d2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"address_list\", jsonData.address_array.length);",
									"",
									"let a = pm.environment.get(\"address_list\")",
									"",
									"if (a === 0) {",
									"    ",
									"    pm.sendRequest({",
									"            url: pm.environment.get(\"url\") + \"/address/add\",",
									"            method: \"POST\",",
									"            header: {",
									"                \"Authentication\": pm.environment.get(\"token\"),",
									"                \"Content-Type\": \"application/json\"",
									"            },",
									"            body: {",
									"                    \"mode\": \"raw\",",
									"                    raw: JSON.stringify({",
									"                      \"name\": \"test name\",",
									"                      \"phone\": \"65-88888888\",",
									"                      \"address\": \"41 nguyen thi minh khai\",",
									"                      \"city\": \"saigon\",",
									"                      \"post_code\": \"9999\"})",
									"            }",
									"    }, function (err, response) {",
									"                console.log(response.json());",
									"        });",
									"} else {",
									"    pm.sendRequest(null, function () {",
									"        console.log(a + \" address in address book\");",
									"    });",
									"}",
									"",
									"pm.environment.unset(\"address_list\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04ab1f4c-214a-4d68-ade8-0454a5268104",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authentication",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/address/get-address-list",
							"host": [
								"{{url}}"
							],
							"path": [
								"address",
								"get-address-list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RegisterUnknownShipment",
			"item": [
				{
					"name": "CreateNormalShipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2861c1d7-956b-4b6b-96c3-0fdf98d9e34f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"shipment_id\", jsonData.data.shipment_id);",
									"",
									"console.log(\"Shipment id is: \" + pm.environment.get(\"shipment_id\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authentication",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"from_country\": \"china\",\n  \"to_country\": \"singapore\",\n  \"shipment_description\": \"test shipment\",\n  \"expected_arrival_date\": \"2019-7-15\",\n  \"expected_pickup_date\": \"2019-8-6\",\n  \"is_group_buy\": false,\n  \"supplier_invoices\": [],\n  \"products\": [\n    {\n      \"product_id\": \"\",\n      \"provided_weight\": 0,\n      \"provided_width\": 0,\n      \"provided_height\": 0,\n      \"provided_length\": 0,\n      \"provided_cbm\": 2,\n      \"total_provided_cartons\": 4,\n      \"provided_quantity\": 2,\n      \"shipper_address_id\": 1,\n      \"supplier_invoice\": \"\",\n      \"has_proper_license\": false,\n      \"provided_item_description\": \"product name\",\n      \"item_photo\": \"\",\n      \"unit_price\": 22,\n      \"currency\": \"RMB\",\n      \"is_collection_service\": false,\n      \"collection_address_id\": 0,\n      \"is_self_pickup\": true,\n      \"delivery_address_id\": 0,\n      \"product_remark\": \"this is note\",\n      \"couriers\": [\n        {\n          \"courier_id\": \"\",\n          \"courier_name\": \"test couriour\",\n          \"courier_number\": \"9999\"\n        }\n      ]\n    }\n  ],\n  \"action\": 2\n}"
						},
						"url": {
							"raw": "{{url}}/{{create_shipment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{create_shipment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetShipmentAlreadyCreated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c68705f2-a2c7-44db-b9ef-84c5469da2d2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"product_id\", jsonData.data.shipment_info.products[0].product_id);",
									"console.log(\"Product ID is: \" + pm.environment.get(\"product_id\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04ab1f4c-214a-4d68-ade8-0454a5268104",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authentication",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/{{get_shipment}}/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{get_shipment}}",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "OpenShipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c68705f2-a2c7-44db-b9ef-84c5469da2d2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04ab1f4c-214a-4d68-ade8-0454a5268104",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"url": {
							"raw": "{{url}}/internal/open-shipment-order/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"open-shipment-order",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CalculateFirstQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2861c1d7-956b-4b6b-96c3-0fdf98d9e34f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Return First Quote success\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.value) > 0;",
									"});",
									"",
									"pm.environment.set(\"firstquote\", pm.response.json().data);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_id\": \"{{shipment_id}}\",\n  \"calculation_method\": \"cbm\",\n  \"vgm_charge\": 0,\n  \"fumigation_charge\": 0,\n  \"collection_cost\": 0,\n  \"extra_fee\": 0,\n  \"delivery_cost\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/calculate-first-quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"calculate-first-quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "SendFirstQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2861c1d7-956b-4b6b-96c3-0fdf98d9e34f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"calculation_method\": \"cbm\",\n  \"vgm_charge\": 0,\n  \"fumigation_charge\": 0,\n  \"collection_cost\": 0,\n  \"extra_fee\": 0,\n  \"reason_extra_fee\": \"\",\n  \"delivery_cost\": 0,\n  \"first_quote\": 280,\n  \"final_quote\": 0,\n  \"gst\": 0,\n  \"total_freight_cost\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/pricing",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "ConfirmFirstQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2861c1d7-956b-4b6b-96c3-0fdf98d9e34f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shipment_status\":\"wait_cargo_come_gzwh\"\n}"
						},
						"url": {
							"raw": "{{url}}/shipment/change-shipment-status/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"shipment",
								"change-shipment-status",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterUnknown",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.info(\"Store temp shipment ID\")",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var qc_code_string = jsonData.data[0];",
									"var temp_shipment_id =  qc_code_string.split(\";\")[1];",
									"console.info(\"temp_shipment_id: \" + temp_shipment_id)",
									"",
									"",
									"",
									"pm.environment.set(\"temp_shipment_id\", temp_shipment_id)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authentication-Internal",
								"value": "{{token_internal}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"same_dimension\": false,\n  \"consignee_id\": \"\",\n  \"total_cartons\": 2,\n  \"total_pallets\": 0,\n  \"shipment_supplier_invoice\": \"delay_letter1563938277suppiler_invoice.png\",\n  \"couriers\": [\n    {\n      \"courier_id\": \"\",\n      \"courier_name\": \"test courier\",\n      \"courier_number\": \"9999\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{url}}/{{temp_shipment}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{temp_shipment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetListProductNeedtoMap",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0d262dc-398d-4841-9fb3-1370210276c2",
								"exec": [
									"var expect_shipment_id = pm.environment.get(\"shipment_id\")",
									"",
									"pm.test(\"Constain expected shipment\", function () {",
									"    pm.expect(pm.response.text()).to.include(expect_shipment_id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f390cf22-2ed5-4f71-8ae2-94cd1599f8c6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authentication-Internal",
								"value": "{{token_internal}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/existing-product?",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"existing-product"
							]
						}
					},
					"response": []
				},
				{
					"name": "MapToIdentifiedShipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52190d6a-47e5-43e0-891c-7f18e52bf328",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"temporary_product_id\": \"{{temp_shipment_id}}-1\",\n  \"selected_product_id\": \"{{product_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/temporary-shipment/mapping",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"temporary-shipment",
								"mapping"
							]
						}
					},
					"response": []
				},
				{
					"name": "ScanToUpdateDimensionPhoto",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var cargo = jsonData.data.actual_product_list[0].cargoes;",
									"var list_qr_code = [];",
									"var list_cargo_id = [];",
									"var i = 0;",
									"var n = 0;",
									"",
									"for(i = 0; i < cargo.length; i++) {",
									"    list_qr_code.push(cargo[i].qr_code);",
									"}",
									"",
									"for(n = 0; n < cargo.length; n++) {",
									"    list_cargo_id.push(list_qr_code[n].split(\";\")[4]);",
									"    pm.environment.set(\"cargo_\" + n, list_qr_code[n].split(\";\")[4])",
									"}",
									"",
									"pm.environment.set(\"list_qr_code\", list_qr_code)",
									"",
									"console.log(list_qr_code)",
									"console.log(list_cargo_id)",
									"",
									"",
									"if (list_qr_code.length !== 0) {",
									"",
									"  var j = 0;",
									"    for (j = 0; j < list_qr_code.length; j++) {",
									"        pm.sendRequest({",
									"                url: pm.environment.get(\"url\") + \"/dimension-machine/dimension\",",
									"                method: \"POST\",",
									"                header: {",
									"                    \"Authorization\": \"uztUifKfNwQIWOKGPDSH6NggmPE284Og\",",
									"                    \"Content-Type\": \"application/json\"",
									"                },",
									"                body: {",
									"                        \"mode\": \"raw\",",
									"                        raw: JSON.stringify({",
									"                          \"qr_code\": list_qr_code[j],",
									"                          \"width\": 50,",
									"                          \"length\": 60,",
									"                          \"height\": 70,",
									"                          \"weight\": 3,",
									"                          \"scan_time\": \"2019-07-31 03:18:24\",",
									"                          \"send_time\": \"2019-07-31 03:18:24\"})",
									"                }",
									"        }, function (err, response) {",
									"                    console.log(response.json());",
									"            });",
									"    }",
									"} else {",
									"    pm.sendRequest(null, function () {",
									"        console.log(a + \" There is no any qr code\");",
									"    });",
									"}",
									"",
									"// if (list_qr_code.length !== 0) {",
									"",
									"//   var x = 0;",
									"//     for (x = 0; x < list_qr_code.length; x++) {",
									"//         pm.sendRequest({",
									"//                 url: pm.environment.get(\"url\") + \"/dimension-machine/photo\",",
									"//                 method: \"POST\",",
									"//                 header: {",
									"//                     \"Authorization\": \"uztUifKfNwQIWOKGPDSH6NggmPE284Og\",",
									"//                     \"Content-Type\": \"multipart/form-data\"",
									"//                 },",
									"//                 body: {",
									"//                         \"mode\": \"formdata\",",
									"//                         \"formdata\": [",
									"//                             {key: \"qr_code\", value : list_qr_code[x], type: \"text\"},",
									"//                             {key: \"photo\", src: \"C:/Users/swdig.UX430U/Desktop/test.png\", type: \"img\"},",
									"//                             {key: \"scan_time\", value: \"2019-07-31 03:18:24\", type: \"text\"},",
									"//                             {key: \"send_time\", value: \"2019-07-31 03:18:24\", type: \"text\"}",
									"",
									"//                         ]",
									"//                 }",
									"//         }, function (err, response) {",
									"//                     console.log(response.json());",
									"//             });",
									"//     }",
									"// } else {",
									"//     pm.sendRequest(null, function () {",
									"//         console.log(a + \" There is no any qr code\");",
									"//     });",
									"// }",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/actual-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"actual-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckProductCBM",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var actual_cbm = jsonData.data.actual_product_list[0].actual_cbm",
									"",
									"",
									"pm.test(\"Product CBM > 0\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(actual_cbm) > 0;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/actual-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"actual-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentCBM",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var actual_cbm = jsonData.data.shipment_actual_cbm",
									"",
									"",
									"pm.test(\"Shipment CBM > 0\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(actual_cbm) > 0;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ChangeSttToGzVerified",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Uncheck Incompleted\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Product updated\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"product_id\": \"{{product_id}}\",\n  \"actual_item_description\": \"\",\n  \"final_item_description\": \"\",\n  \"actual_quantity\": 2,\n  \"product_total_boxes\": 2,\n  \"arrive_at_gzwh\": true,\n  \"gz_cargo_incomplete\": false,\n  \"gz_note_cargo_incomplete\": \"\",\n  \"actual_arrival_date_gzwh\": \"\",\n  \"shipper_address_id\": 1,\n  \"shipper_name\": \"test name\",\n  \"shipper_phone\": \"65-88888888\",\n  \"shipper_address\": \"41 nguyen thi minh khai\",\n  \"item_photo\": \"\",\n  \"supplier_invoice\": \"\",\n  \"is_returned\": false,\n  \"cargoes\": [\n    {\n      \"id\": \"{{cargo_0}}\",\n      \"actual_width\": 0.5,\n      \"actual_height\": 0.7,\n      \"actual_length\": 0.6,\n      \"actual_weight\": 3,\n      \"number_carton_in\": 0,\n      \"total_cargo\": 0\n    },\n    {\n      \"id\": \"{{cargo_1}}\",\n      \"actual_width\": 0.5,\n      \"actual_height\": 0.7,\n      \"actual_length\": 0.6,\n      \"actual_weight\": 3,\n      \"number_carton_in\": 0,\n      \"total_cargo\": 0\n    }\n  ],\n  \"currency\": \"RMB\",\n  \"unit_price\": 22,\n  \"has_proper_license\": false,\n  \"custom_broker_item_description\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/actual-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"actual-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "CalculateFinalQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Final Quote is OK\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data) > 0;",
									"});",
									"",
									"pm.environment.set(\"finalquote\", pm.response.json().data);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_id\": \"{{shipment_id}}\",\n  \"calculation_method\": \"cbm\",\n  \"vgm_charge\": 0,\n  \"fumigation_charge\": 0,\n  \"collection_cost\": 0,\n  \"extra_fee\": 0,\n  \"delivery_cost\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/calculate-final-quote",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"calculate-final-quote"
							]
						}
					},
					"response": []
				},
				{
					"name": "SendFinalQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"calculation_method\": \"cbm\",\n  \"vgm_charge\": 0,\n  \"fumigation_charge\": 0,\n  \"collection_cost\": 0,\n  \"extra_fee\": 0,\n  \"reason_extra_fee\": \"\",\n  \"delivery_cost\": 0,\n  \"first_quote\": 280,\n  \"final_quote\": 58.8,\n  \"gst\": 0,\n  \"total_freight_cost\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/pricing",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(wait_for_final_quote_confirmation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check Shipment Status OK\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"wait_for_final_quote_confirmation\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ConfirmFinalQuote",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var moment = require('moment')",
									"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_status\": \"wait_for_loading\"\n}"
						},
						"url": {
							"raw": "{{url}}/shipment/change-shipment-status/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"shipment",
								"change-shipment-status",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDraftLoadList",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loading_date\": \"{{timestamp}}\",\n  \"container_number\": \"12312312313\",\n  \"container_type\": \"40ft_hc\",\n  \"master_bl_id\": \"\",\n  \"swl_job_number\": \"\",\n  \"delay_letter\": \"\",\n  \"loading_products\": []\n}"
						},
						"url": {
							"raw": "{{url}}/internal/load-list/loading-date",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"load-list",
								"loading-date"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDraftLoadListID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"draft_load_list_id\", jsonData.data.load_lists[0].id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/load-lists?is_final_load_list=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"load-lists"
							],
							"query": [
								{
									"key": "is_final_load_list",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AddProdcutToDraftLoadList",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loading_date\": \"{{timestamp}}\",\n  \"container_number\": \"12312312313\",\n  \"container_type\": \"40ft_hc\",\n  \"master_bl_id\": \"\",\n  \"swl_job_number\": \"\",\n  \"delay_letter\": \"\",\n  \"loading_products\": [\n    {\n      \"loading_order\": 0,\n      \"product_id\": \"{{product_id}}\",\n      \"loading_list_remark\": \"\"\n    }\n  ],\n  \"id\": {{draft_load_list_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/internal/update-load-list",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"update-load-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetDraftLoadListBeforeScanLoad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"draft_load_list_scan\", jsonData.data.draft_load_lists.slice(-1)[0].id); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/draft-load-lists",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"draft-load-lists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Scan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/draft-load-list/8/scan",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"draft-load-list",
								"8",
								"scan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Load",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"var i = 0;",
									"let list_qr_code = pm.environment.get(\"list_qr_code\")",
									"",
									"for (i = 0; i < list_qr_code.length; i++) {",
									"    pm.sendRequest({",
									"            url: pm.environment.get(\"url\") + \"/internal/scanning/load\",",
									"            method: \"POST\",",
									"            header: {",
									"                \"Authorization\": \"{{token_internal}}\",",
									"                \"Content-Type\": \"application/json\"",
									"            },",
									"            body: {",
									"                    \"mode\": \"raw\",",
									"                    raw: JSON.stringify({",
									"                      \"qr_code\": list_qr_code[i]})",
									"            }",
									"    }, function (err, response) {",
									"                console.log(response.json());",
									"        });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"is_loading\":true}"
						},
						"url": {
							"raw": "{{url}}/internal/scanning/load",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"scanning",
								"load"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Everything is OK to load\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.message).to.eql(\"Everything is OK to load.\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/scanning/load/check",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"scanning",
								"load",
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "CompleteLoad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Loading complete\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.eql(\"Loading complete\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{draft_load_list_id}},\n  \"seal_number\": \"seal123\",\n  \"loading_products\": [\n    {\n      \"product_id\": \"{{product_id}}\",\n      \"loading_order\": \"1\",\n      \"loading_list_remark\": \"test remart\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{url}}/internal/scanning/load/complete",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"scanning",
								"load",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(in_transit)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Shipment In transit\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"in_transit\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ShipmentDelay",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{draft_load_list_id}},\n  \"master_bl_id\": \"MasterBL\",\n  \"loading_date\": \"{{timestamp}}\",\n  \"container_number\": \"12312312313\",\n  \"container_type\": \"40ft_hc\",\n  \"swl_job_number\": \"SWLJob\",\n  \"portnet_status\": \"Delay\",\n  \"delay_letter\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/update-load-list",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"update-load-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(delay)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Shipment Delay\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"delay\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ShipmentArrvied",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{draft_load_list_id}},\n  \"master_bl_id\": \"MasterBL\",\n  \"loading_date\": \"{{timestamp}}\",\n  \"container_number\": \"12312312313\",\n  \"container_type\": \"40ft_hc\",\n  \"swl_job_number\": \"SWLJob\",\n  \"portnet_status\": \"Arrived\",\n  \"delay_letter\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/update-load-list",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"update-load-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(arrivedSGP)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Shipment Arrvied SGP\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"arrived_sgp\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CalculateGST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"GST is OK\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data) > 0;",
									"});",
									"",
									"pm.environment.set(\"gst\", pm.response.json().data);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_id\": \"{{shipment_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/calculate-gst",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"calculate-gst"
							]
						}
					},
					"response": []
				},
				{
					"name": "CalculateTotalFreightCost",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"GST is OK\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data) > 0;",
									"});",
									"",
									"pm.environment.set(\"freightcost\", pm.response.json().data);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shipment_id\": \"{{shipment_id}}\",\n  \"gst\": {{gst}}\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/calculate-total-freight-cost",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"calculate-total-freight-cost"
							]
						}
					},
					"response": []
				},
				{
					"name": "SendTotalFreightCost",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"calculation_method\": \"cbm\",\n  \"vgm_charge\": 0,\n  \"fumigation_charge\": 0,\n  \"collection_cost\": 0,\n  \"extra_fee\": 0,\n  \"reason_extra_fee\": \"\",\n  \"delivery_cost\": 0,\n  \"first_quote\": {{firstquote}},\n  \"final_quote\": {{finalquote}},\n  \"gst\": {{gst}},\n  \"total_freight_cost\": {{freightcost}}\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/pricing",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckFreightCostFromExternal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Total freight cost is OK\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_info.total_freight_cost) === \"{{freightcost}}\";",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/shipment/get/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"shipment",
								"get",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ScanInSGWH",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var i = 0;",
									"let list_qr_code = pm.environment.get(\"list_qr_code\")",
									"",
									"for (i = 0; i < list_qr_code.length; i++) {",
									"    pm.sendRequest({",
									"            url: pm.environment.get(\"url\") + \"/internal/scanning/sg/scan-in\",",
									"            method: \"POST\",",
									"            header: {",
									"                \"Authorization\": \"{{token_internal}}\",",
									"                \"Content-Type\": \"application/json\"",
									"            },",
									"            body: {",
									"                    \"mode\": \"raw\",",
									"                    raw: JSON.stringify({",
									"                      \"qr_code\": list_qr_code[i]})",
									"            }",
									"    }, function (err, response) {",
									"                console.log(response.json());",
									"        });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/scanning/sg/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"scanning",
								"sg",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "FInishScanInSGWH",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.eql(\"All cargoes have been saved.\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/scanning/sg/finish",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"scanning",
								"sg",
								"finish"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(arrivedSGWH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Shipment Arrvied SGWH\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"arrived_at_sgwh\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unstuffing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"arrive_at_sgwh\": true,\n  \"sg_cargo_incomplete\": false,\n  \"pickup_or_delivery\": true,\n  \"sg_note_cargo_incomplete\": \"\",\n  \"actual_picked_up_date\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}/unstuffing",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}",
								"unstuffing"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckShipmentStt(completed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ce368e-5da8-4916-bb15-faf257a6240f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Shipment Completed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.shipment_status).to.eql(\"complete\");",
									"});",
									"",
									"console.log(\"Clean up temp environment\")",
									"pm.environment.unset(\"shipment_id\");",
									"pm.environment.unset(\"product_id\");",
									"pm.environment.unset(\"temp_shipment_id\");",
									"pm.environment.unset(\"cargo_0\");",
									"pm.environment.unset(\"cargo_1\");",
									"pm.environment.unset(\"draft_load_list_id\");",
									"pm.environment.unset(\"timestamp\");",
									"pm.environment.unset(\"requirement_id\");",
									"pm.environment.unset(\"draft_load_list_scan\");",
									"pm.environment.unset(\"list_qr_code\");",
									"pm.environment.unset(\"gst\");",
									"pm.environment.unset(\"freightcost\");",
									"pm.environment.unset(\"firstquote\");",
									"pm.environment.unset(\"finalquote\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d682a4a-733d-4135-a9b7-a289f79fe1e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authentication-Internal",
								"type": "text",
								"value": "{{token_internal}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/internal/shipment/{{shipment_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"internal",
								"shipment",
								"{{shipment_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}